{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Danger is a tool that connects your CI build systems to your pull requests. This","type":"text"},{"text":" ","type":"text"},{"text":"provides an excellent developer experience where (most of the time) they can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"know whether a pull request is in a healthy state by looking at a comment"},{"text":" ","type":"text"},{"text":"directly on that pull request.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This connection between the CI build systems and the pull request allows teams"},{"type":"text","text":" "},{"text":"to implement automated code health tools which can give quick feedback to about:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Warnings introduced by the changes"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Linting and code formatting errors based upon agreed-upon standards","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Code coverage percentages","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any other information which can be automated"}]}]}]},{"inlineContent":[{"type":"text","text":"Danger has two base implementations, one in Ruby and one in JavaScript. On top"},{"type":"text","text":" "},{"type":"text","text":"of that, there are Danger runners written in Kotlin and Swift which hand off the"},{"text":" ","type":"text"},{"type":"text","text":"bulk of the work to Danger JS but allow for Dangerfiles, the file which define"},{"text":" ","type":"text"},{"type":"text","text":"what Danger should do, written in languages that will be more familiar to"},{"type":"text","text":" "},{"type":"text","text":"mobile developers. I prefer to use Danger Kotlin when building CI for Android or"},{"text":" ","type":"text"},{"text":"other Java-based projects and Danger Swift when building CI for Apple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"platforms, because I find it is easier to get folks involved in CI code when it"},{"type":"text","text":" "},{"type":"text","text":"is in a language they use every day. It is also more likely that folks in a"},{"type":"text","text":" "},{"type":"text","text":"specific community will create plugins for Danger that you could find useful –"},{"text":" ","type":"text"},{"type":"text","text":"folks using Danger Swift will be more likely to create plugins around Xcode and"},{"text":" ","type":"text"},{"type":"text","text":"other Apple tooling than folks using Danger Kotlin would."}],"type":"paragraph"},{"inlineContent":[{"text":"OK I think that is enough of an intro to Danger, next I’ll talk through the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"flexibility built-in to Danger through its plugin system."}],"type":"paragraph"},{"text":"Danger’s Architecture","anchor":"Dangers-Architecture","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Danger is architected to allow for anyone to create their own plugins that can"},{"type":"text","text":" "},{"type":"text","text":"provide information to Danger which can then be shown on a pull request. I’ve"},{"type":"text","text":" "},{"type":"text","text":"relied on this ability to add plugins to add extra checks that are specific to"},{"type":"text","text":" "},{"type":"text","text":"our codebase, like a localization linter which ensured that Xcode’s command line"},{"text":" ","type":"text"},{"text":"tools could extract keys for localization. Out-of-the-box, Danger allows for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"these plugins to be dynamically included at run time which is a lot of"},{"text":" ","type":"text"},{"text":"flexibility, especially when using statically typed languages like Kotlin and","type":"text"},{"text":" ","type":"text"},{"text":"Swift.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This plugin architecture is very clever and lets people get started with Danger"},{"type":"text","text":" "},{"text":"quite easily. But it is a bit complex. Let’s talk through the moving pieces in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Danger Swift, all of which applies to Danger Kotlin as well:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The Dangerfile"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The Danger Swift Library"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The Danger Swift Runner"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The Danger JS Runner","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Here is how they are all connected. The Danger Swift runner builds and runs the","type":"text"},{"type":"text","text":" "},{"text":"Dangerfile while linking in the Danger Swift library. The Danger Swift runner","type":"text"},{"type":"text","text":" "},{"type":"text","text":"then uses the Danger JS runner to interact with the source control platforms"},{"text":" ","type":"text"},{"type":"text","text":"(GitHub, GitLab, BitBucket, etc). Let’s talk through each of these components in"},{"type":"text","text":" "},{"text":"detail.","type":"text"}]},{"anchor":"The-Dangerfile","text":"The Dangerfile","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Dangerfile, "},{"code":"Dangerfile.swift","type":"codeVoice"},{"type":"text","text":" for Danger Swift, is the code file that"},{"type":"text","text":" "},{"type":"text","text":"defines everything that Danger will do when Danger is run in a CI pipeline. Here"},{"type":"text","text":" "},{"text":"is a simplified example of a Dangerfile from","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/danger.systems\/swift\/","isActive":true},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["import Danger","let danger = Danger()","","\/\/ Add a CHANGELOG entry for app changes","let hasChangelog = danger.git.modifiedFiles.contains(\"changelog.md\")","","if (!hasChangelog) {","    warn(\"Please add a changelog entry for your changes.\")","}"]},{"type":"paragraph","inlineContent":[{"text":"This simple example checks to see if the ","type":"text"},{"type":"codeVoice","code":"changelog.md"},{"type":"text","text":" file has been modified"},{"text":" ","type":"text"},{"type":"text","text":"as part of the pull request and, if not, adds a warning to the pull request"},{"type":"text","text":" "},{"type":"text","text":"letting the developer know that they need to update the changelog. Providing"},{"type":"text","text":" "},{"type":"text","text":"that feedback through this automation means that a contributor to a repo can"},{"text":" ","type":"text"},{"type":"text","text":"quickly learn what changes they need to make to meet the standards of that repo."},{"type":"text","text":" "},{"text":"Plus, the maintainer of the repo can focus on things only humans can do, like","type":"text"},{"text":" ","type":"text"},{"text":"making sure that the pull request follows their architectural guidelines.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At the beginning of every Dangerfile, the Danger library must be imported. Let’s"},{"text":" ","type":"text"},{"type":"text","text":"talk about how that works next."}]},{"type":"heading","text":"The Danger Swift Library","anchor":"The-Danger-Swift-Library","level":3},{"inlineContent":[{"type":"text","text":"The Danger Swift library is what powers the different things you can do in a"},{"type":"text","text":" "},{"type":"text","text":"Dangerfile. The library is built with the core Danger functionality plus any"},{"type":"text","text":" "},{"type":"text","text":"plugins that you’ve chosen to integrate. The documentation recommends"},{"text":" ","type":"text"},{"type":"text","text":"integrating Danger into your workflow by"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/danger.systems\/swift\/guides\/about_the_dangerfile#swift-package-manager-more-performant","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"This allows the Danger Swift library to be built as-needed with just the plugins","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you’ve defined and puts everything in the right place so Swift can find the"},{"text":" ","type":"text"},{"type":"text","text":"library when running the Dangerfile."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"I’m not a fan of this approach but I’ll talk through that later when I go","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"through how I like to use Danger."}]},{"type":"heading","level":3,"text":"The Danger Swift Runner","anchor":"The-Danger-Swift-Runner"},{"type":"paragraph","inlineContent":[{"text":"The Danger Swift runner is a fairly simple tool that ties everything together.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As mentioned before, it runs the Dangerfile while also providing the path to the"},{"type":"text","text":" "},{"type":"text","text":"Danger Swift library. This could easily be a standalone executable, but in the"},{"text":" ","type":"text"},{"text":"recommended setup, linked above in the Danger Swift library section, the runner","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is re-built through Swift Package Manager every time it is needed to be run."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to running the Dangerfile, the Danger Swift runner runs the Danger"},{"text":" ","type":"text"},{"type":"text","text":"JS runner, which handles all communication with the source control platforms."}]},{"level":3,"type":"heading","text":"The Danger JS Runner","anchor":"The-Danger-JS-Runner"},{"inlineContent":[{"type":"text","text":"As mentioned before, the Danger JS runner is the common tool across the"},{"type":"text","text":" "},{"text":"different Danger “front-ends” (Danger Swift, Danger Kotlin, etc.) that handles","type":"text"},{"type":"text","text":" "},{"text":"all the interactions with source control platforms. These interactions are","type":"text"},{"text":" ","type":"text"},{"text":"bi-directional because the Dangerfile needs access to information from those","type":"text"},{"type":"text","text":" "},{"text":"platforms and also needs to send information to them for warnings, errors, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"informational messages."}],"type":"paragraph"},{"inlineContent":[{"text":"Strangely, I don’t see anything about how to install Danger JS, or even the need","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to do so, in "},{"identifier":"https:\/\/danger.systems\/swift\/guides\/getting_started","type":"reference","isActive":true},{"type":"text","text":". I"},{"type":"text","text":" "},{"type":"text","text":"prefer to install Danger JS through npm, which I prefer to install through"},{"text":" ","type":"text"},{"text":"Homebrew. Here are the steps to do that:","type":"text"}],"type":"paragraph"},{"code":["brew install node","npm install -g danger"],"syntax":"shell","type":"codeListing"},{"level":2,"type":"heading","anchor":"How-I-Setup-Danger","text":"How I Setup Danger"},{"inlineContent":[{"type":"text","text":"Now that we know how all the pieces fit together, I’ll gripe about the things"},{"text":" ","type":"text"},{"text":"I don’t like about this approach and talk about how I like to set things up.","type":"text"}],"type":"paragraph"},{"text":"Gripes","level":3,"type":"heading","anchor":"Gripes"},{"type":"paragraph","inlineContent":[{"text":"All of my gripes revolve around the need to use Swift Package Manager to build","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and run the runner and library:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"I don’t like to mix tooling and my app’s dependencies"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"I don’t always want to use SPM","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"I don’t want to re-build Danger on every run"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The recommended approach is invasive to my project, requiring me to add a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"folder that will not be used"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Due to the invasive nature of the recommended approach, applying the same","type":"text"},{"text":" ","type":"text"},{"text":"Danger configurations across multiple repos, and keeping those configurations in","type":"text"},{"text":" ","type":"text"},{"text":"sync, it creates a lot of manual overhead","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"I like pre-built binaries"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"What I want is a pre-built executable for the Danger Swift runner, and a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"pre-built framework for the Danger Swift library. Let’s talk about how I make"},{"type":"text","text":" "},{"text":"that work.","type":"text"}]},{"text":"My Setup","anchor":"My-Setup","level":3,"type":"heading"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This setup requires a fork of Danger Swift."}]}],"type":"aside","style":"note"},{"anchor":"The-Runner","type":"heading","text":"The Runner","level":4},{"type":"paragraph","inlineContent":[{"text":"The Danger Swift runner is already meant to be a standalone executable, so we","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"don’t need to do too much there. We want to make sure that it is built as a"},{"type":"text","text":" "},{"type":"text","text":"universal binary so it can run on both Apple Silicon and Intel, so we can build"},{"type":"text","text":" "},{"text":"it like this:","type":"text"}]},{"syntax":"shell","code":["swift build -c release --arch arm64 --arch x86_64"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Swift builds the ","type":"text"},{"type":"codeVoice","code":"danger-swift"},{"text":" binary and puts it in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"“.build\/apple\/Products\/Release\/danger-swift” folder so we’ll need to copy it"},{"type":"text","text":" "},{"text":"from there to where we need it. All of that is simple and straightforward.","type":"text"}]},{"anchor":"The-Library","text":"The Library","level":4,"type":"heading"},{"inlineContent":[{"text":"Building the library in a portable way isn’t quite as nice, but we’ll get to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that in a moment. First, since we want a portable library that can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere, we need to find a way to build that library with all the plugins we"},{"text":" ","type":"text"},{"type":"text","text":"need. This approach requires choosing your plugins ahead of time and not being"},{"text":" ","type":"text"},{"type":"text","text":"able to do so at run time – if you want a new plugin you’ll need to rebuild and"},{"text":" ","type":"text"},{"type":"text","text":"redistribute the library."}],"type":"paragraph"},{"type":"heading","text":"Integrating Plugins","anchor":"Integrating-Plugins","level":5},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fortunately, Danger Swift has already gone through the process of integrating a"},{"type":"text","text":" "},{"type":"text","text":"common plugin, SwiftLint, into the library so we can follow the maintainer’s"},{"text":" ","type":"text"},{"type":"text","text":"lead and do the same thing for our plugins. There is already a “Plugins” folder"},{"type":"text","text":" "},{"text":"in the “Sources\/Danger” folder and adding our plugin there is quite simple – we","type":"text"},{"type":"text","text":" "},{"type":"text","text":"copy the source code folder into the “Plugins” folder and then make whatever"},{"text":" ","type":"text"},{"text":"changes are need to make the Danger library successfully compile again. Doing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that requires fixing any naming conflicts and, while we’re in there, we’ll fix"},{"type":"text","text":" "},{"text":"warnings around importing Danger by removing any ","type":"text"},{"type":"codeVoice","code":"import Danger"},{"text":" code. Let’s","type":"text"},{"text":" ","type":"text"},{"text":"walk through an example with a popular plugin, ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/f-meloni\/danger-swift-coverage"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"which gathers code coverage so it can be posted on pull requests.","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fork Danger Swift and clone the fork to your machine"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Clone DangerSwiftCoverage to your machine"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copy the “Sources\/DangerSwiftCoverage” folder from DangerSwiftCoverage into"},{"type":"text","text":" "},{"type":"text","text":"the “Sources\/Danger\/Plugins” folder in Danger Swift. If you cloned the two repos"},{"type":"text","text":" "},{"text":"next to each other, the copy command from the root of the Danger Swift repo","type":"text"},{"type":"text","text":" "},{"text":"would look like this:","type":"text"}]}]}]},{"type":"codeListing","syntax":"shell","code":["cp -r ..\/danger-swift-coverage\/Sources\/DangerSwiftCoverage Sources\/Danger\/Plugins"]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Open Danger Swift’s Package.swift in Xcode and try to build the Danger"},{"type":"text","text":" "},{"text":"library.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Follow the compiler errors to fix all the build issues around multiple files"},{"text":" ","type":"text"},{"text":"and types with conflicting names:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rename the file “Sources\/Danger\/DangerSwiftCoverage\/Models\/Report.swift”"},{"type":"text","text":" "},{"text":"to “Sources\/Danger\/DangerSwiftCoverage\/Models\/DangerSwiftCoverageReport.swift”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Rename the ","type":"text"},{"type":"codeVoice","code":"File"},{"type":"text","text":" struct on line 34 of “XcodeBuildCoverage.swift” to"},{"type":"text","text":" "},{"type":"codeVoice","code":"XcodeBuildCoverageFile"},{"type":"text","text":" and update the type of "},{"type":"codeVoice","code":"files"},{"type":"text","text":" on line 26 of the same"},{"type":"text","text":" "},{"type":"text","text":"file to use the "},{"type":"codeVoice","code":"XcodeBuildCoverageFile"},{"text":" type.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove the "},{"code":"import Danger","type":"codeVoice"},{"text":" from the top of the “XcodeBuildCoverage.swift”","type":"text"},{"type":"text","text":" "},{"text":"file.","type":"text"}]}]}],"type":"orderedList"}]}],"type":"orderedList","start":4},{"type":"paragraph","inlineContent":[{"text":"OK, now we’ve integrated a plugin directly into the Danger library which means","type":"text"},{"text":" ","type":"text"},{"text":"that plugin will always be available in our Dangerfiles when linking against a","type":"text"},{"type":"text","text":" "},{"text":"pre-built version of the library. Here are all the open source plugins I like","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to include, and integrating them, or any others you may find, should follow the"},{"text":" ","type":"text"},{"type":"text","text":"same steps as above:"}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","overridingTitle":"DangerSwiftCoverage","isActive":true,"identifier":"https:\/\/github.com\/f-meloni\/danger-swift-coverage","overridingTitleInlineContent":[{"type":"text","text":"DangerSwiftCoverage"}]},{"text":" (mentioned above)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/f-meloni\/danger-swift-xcodesummary"},{"type":"text","text":" (yes, Xcode is misspelled, but still a good plugin)"}]}]}],"type":"unorderedList"},{"level":5,"type":"heading","text":"Building a Portable Library","anchor":"Building-a-Portable-Library"},{"inlineContent":[{"type":"text","text":"As the Swift package is setup, there is no way to create a portable library. The"},{"text":" ","type":"text"},{"text":"reason is that the ","type":"text"},{"type":"codeVoice","code":"swift build"},{"type":"text","text":" command will not create a framework like we’re"},{"text":" ","type":"text"},{"type":"text","text":"used to working with on iOS. Instead, it creates a folder full of object,"},{"type":"text","text":" "},{"text":".swiftmodule, and .dylib files:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["$ ls .build\/apple\/Products\/Release                 ","Danger-Swift.o                          Danger_Swift.swiftmodule    RunnerLib.o","Danger.o                                Logger.o                    RunnerLib.swiftmodule","Danger.swiftmodule                      Logger.swiftmodule          Version.o","DangerDependenciesResolver.o            OctoKit.o                   Version.swiftmodule","DangerDependenciesResolver.swiftmodule  OctoKit.swiftmodule         danger-swift","DangerFixtures.o                        PackageFrameworks           danger-swift.dSYM","DangerFixtures.swiftmodule              RequestKit.o                libDanger.dylib","DangerShellExecutor.o                   RequestKit.swiftmodule      libDanger.dylib.dSYM","DangerShellExecutor.swiftmodule         Runner.swiftmodule"],"syntax":"shell"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is not very portable. We need almost all of these files to be able to link"},{"type":"text","text":" "},{"text":"against libDanger.dylib. Plus, these files are tied to a specific Swift version","type":"text"},{"type":"text","text":" "},{"text":"because ","type":"text"},{"identifier":"https:\/\/www.swift.org\/blog\/library-evolution\/","isActive":true,"type":"reference"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"not turned on. This means that when you change the default version of Xcode on a","type":"text"},{"type":"text","text":" "},{"text":"machine, and therefore change the default version of Swift, you’ll need to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"rebuild the Danger Swift library. I’ve worked around this in the past by keeping"},{"type":"text","text":" "},{"type":"text","text":"an older version of Xcode on the build machines that is only used to run Danger"},{"type":"text","text":" "},{"type":"text","text":"Swift, but it is easy to forget why you’re doing that and inadvertently break"},{"text":" ","type":"text"},{"type":"text","text":"things."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It might be possible to use library evolution with this libDanger.dylib"},{"type":"text","text":" "},{"type":"text","text":"and the object files, but I was not able to make it work."}]}],"name":"Note","style":"note","type":"aside"},{"inlineContent":[{"text":"To get a framework, which I find to be much more portable, you must use an Xcode","type":"text"},{"type":"text","text":" "},{"type":"text","text":"project file, which I’ve added on this"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/danger\/swift\/pull\/579"},{"text":". That pull request","type":"text"},{"type":"text","text":" "},{"text":"also changes the Danger Swift library’s imports to be ","type":"text"},{"type":"reference","identifier":"https:\/\/forums.swift.org\/t\/update-on-implementation-only-imports\/26996","isActive":true},{"type":"text","text":" "},{"type":"text","text":"imports which tells the linker that the symbols within those imports won’t be"},{"text":" ","type":"text"},{"type":"text","text":"exposed publicly. And finally, that pull request tells the Danger Swift runner"},{"text":" ","type":"text"},{"text":"to look for a “Danger.framework” to link against when running the Dangerfile.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once that is done, you can run this command to generate the framework:"}],"type":"paragraph"},{"type":"codeListing","code":["xcodebuild archive -project Danger.xcodeproj \\","  -scheme Danger -sdk macosx -destination \"generic\/platform=macOS\" \\","  -archivePath \"archives\/Danger.framework\""],"syntax":"shell"},{"inlineContent":[{"text":"I’ve added a","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/danger\/swift\/pull\/579\/files#diff-ee93d24b11504c134791a4e4232fc7ccb850be02de509fd76431a30509bf675e","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Using this Setup","level":3,"anchor":"Using-this-Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that we have an executable binary and a framework, how do we use them in our"},{"type":"text","text":" "},{"type":"text","text":"CI jobs? Each of them is portable, so we can put them where we need them. I like"},{"text":" ","type":"text"},{"type":"text","text":"to store all of my CI tooling in a centralized place, which I’ve talked about in"},{"type":"text","text":" "},{"text":"my ","type":"text"},{"identifier":"doc:\/\/Brunow\/documentation\/Brunow\/04-21-ci-tooling","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"previous blog post on CI tooling"}],"overridingTitle":"previous blog post on CI tooling","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you don’t want to, or can’t, use that centralized place, then you need to","type":"text"},{"type":"text","text":" "},{"text":"make sure that the ","type":"text"},{"type":"codeVoice","code":"danger-swift"},{"text":" executable and the Danger.framework library","type":"text"},{"text":" ","type":"text"},{"text":"are in the same directory when you run ","type":"text"},{"code":"danger-swift","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"Once you have them there, you’ll want to do something like this in your CI job:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"shell","code":["...","brew install node","npm install -g danger","danger-swift ci","..."]}]}],"abstract":[{"text":"Danger is an excellent tool for providing build tool feedback on pull requests","type":"text"},{"text":" ","type":"text"},{"text":"with a flexible plugin architecture, but I find that limiting that flexibility","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"makes it more ergonomic."}],"hierarchy":{"paths":[["doc:\/\/Brunow\/documentation\/Brunow"],["doc:\/\/Brunow\/documentation\/Brunow","doc:\/\/Brunow\/documentation\/Brunow\/Archive","doc:\/\/Brunow\/documentation\/Brunow\/2024"]]},"identifier":{"url":"doc:\/\/Brunow\/documentation\/Brunow\/04-22-how-i-like-to-use-danger","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"article","metadata":{"title":"How I Like to Use Danger","images":[{"type":"card","identifier":"exampleDangerReport.png"}],"color":{"standardColorIdentifier":"purple"},"modules":[{"name":"Brunow"}],"platforms":[{"name":"Brunow","introducedAt":"2024.04.22"}]},"topicSectionsStyle":"detailedGrid","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/brunow\/04-22-how-i-like-to-use-danger"]}],"references":{"allChecksHavePassed.png":{"identifier":"allChecksHavePassed.png","type":"image","alt":"Screenshot of the GitHub interface showing that all CI checks have passed.","variants":[{"traits":["1x","light"],"url":"\/images\/allChecksHavePassed@1x.png"}]},"https://github.com/f-meloni/danger-swift-coverage":{"type":"link","url":"https:\/\/github.com\/f-meloni\/danger-swift-coverage","identifier":"https:\/\/github.com\/f-meloni\/danger-swift-coverage","title":"DangerSwiftCoverage","titleInlineContent":[{"text":"DangerSwiftCoverage","type":"text"}]},"doc://Brunow/documentation/Brunow/04-21-ci-tooling":{"title":"CI Tooling","url":"\/documentation\/brunow\/04-21-ci-tooling","type":"topic","kind":"article","images":[{"type":"card","identifier":"allChecksHavePassed.png"}],"identifier":"doc:\/\/Brunow\/documentation\/Brunow\/04-21-ci-tooling","abstract":[{"type":"text","text":"Storing CI tools in a centralized location to be used across the pipelines for"},{"type":"text","text":" "},{"type":"text","text":"multiple projects."}],"role":"article"},"https://github.com/danger/swift/pull/579/files#diff-ee93d24b11504c134791a4e4232fc7ccb850be02de509fd76431a30509bf675e":{"identifier":"https:\/\/github.com\/danger\/swift\/pull\/579\/files#diff-ee93d24b11504c134791a4e4232fc7ccb850be02de509fd76431a30509bf675e","title":"shell script on that pull request that builds both the runner and the library","type":"link","titleInlineContent":[{"text":"shell script on that pull request that builds both the runner and the library","type":"text"}],"url":"https:\/\/github.com\/danger\/swift\/pull\/579\/files#diff-ee93d24b11504c134791a4e4232fc7ccb850be02de509fd76431a30509bf675e"},"https://github.com/danger/swift/pull/579":{"title":"proof of concept pull request for showing how to have a pre-built library that uses library evolution","titleInlineContent":[{"text":"proof of concept pull request for showing how to have a pre-built library that uses library evolution","type":"text"}],"identifier":"https:\/\/github.com\/danger\/swift\/pull\/579","url":"https:\/\/github.com\/danger\/swift\/pull\/579","type":"link"},"https://github.com/f-meloni/danger-swift-xcodesummary":{"identifier":"https:\/\/github.com\/f-meloni\/danger-swift-xcodesummary","title":"DangerXCodeSummary","type":"link","titleInlineContent":[{"text":"DangerXCodeSummary","type":"text"}],"url":"https:\/\/github.com\/f-meloni\/danger-swift-xcodesummary"},"doc://Brunow/documentation/Brunow/2024":{"title":"2024","url":"\/documentation\/brunow\/2024","type":"topic","kind":"article","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/2024","abstract":[],"role":"collectionGroup"},"https://forums.swift.org/t/update-on-implementation-only-imports/26996":{"identifier":"https:\/\/forums.swift.org\/t\/update-on-implementation-only-imports\/26996","title":"@_implementationOnly","type":"link","titleInlineContent":[{"code":"@_implementationOnly","type":"codeVoice"}],"url":"https:\/\/forums.swift.org\/t\/update-on-implementation-only-imports\/26996"},"doc://Brunow/documentation/Brunow":{"url":"\/documentation\/brunow","type":"topic","identifier":"doc:\/\/Brunow\/documentation\/Brunow","title":"Brunow","role":"collection","abstract":[{"text":"David Brunow, known as Brunow [ˈbɹunoʊ] to the folks he works with, is a human living on Earth. You might have something in common with him — if you think it is ridiculous that he is talking about himself in the first person here, so does he.","type":"text"}],"kind":"symbol"},"https://danger.systems/swift/guides/getting_started":{"title":"the Danger Swift documentation","titleInlineContent":[{"text":"the Danger Swift documentation","type":"text"}],"identifier":"https:\/\/danger.systems\/swift\/guides\/getting_started","url":"https:\/\/danger.systems\/swift\/guides\/getting_started","type":"link"},"exampleDangerReport.png":{"identifier":"exampleDangerReport.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/exampleDangerReport@1x.png"}]},"doc://Brunow/documentation/Brunow/Archive":{"url":"\/documentation\/brunow\/archive","abstract":[{"type":"text","text":"All posts"}],"kind":"article","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/Archive","role":"collectionGroup","title":"Archive","type":"topic"},"https://danger.systems/swift/":{"title":"Danger Swift’s documentation","titleInlineContent":[{"text":"Danger Swift’s documentation","type":"text"}],"identifier":"https:\/\/danger.systems\/swift\/","url":"https:\/\/danger.systems\/swift\/","type":"link"},"https://www.swift.org/blog/library-evolution/":{"identifier":"https:\/\/www.swift.org\/blog\/library-evolution\/","title":"library evolution","type":"link","titleInlineContent":[{"text":"library evolution","type":"text"}],"url":"https:\/\/www.swift.org\/blog\/library-evolution\/"},"https://danger.systems/swift/guides/about_the_dangerfile#swift-package-manager-more-performant":{"type":"link","titleInlineContent":[{"text":"adding Danger Swift and any related plugins to your ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":" file","type":"text"}],"url":"https:\/\/danger.systems\/swift\/guides\/about_the_dangerfile#swift-package-manager-more-performant","title":"adding Danger Swift and any related plugins to your Package.swift file","identifier":"https:\/\/danger.systems\/swift\/guides\/about_the_dangerfile#swift-package-manager-more-performant"}}}