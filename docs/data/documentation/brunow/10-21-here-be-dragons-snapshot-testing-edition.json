{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"color":{"standardColorIdentifier":"purple"},"images":[{"type":"card","identifier":"misrenderedSwiftUIList.png"}],"title":"Here Be Dragons: iOS Snapshot Testing Edition","platforms":[{"introducedAt":"2023.10.21","name":"Brunow"}],"modules":[{"name":"Brunow"}]},"hierarchy":{"paths":[["doc:\/\/Brunow\/documentation\/Brunow"],["doc:\/\/Brunow\/documentation\/Brunow","doc:\/\/Brunow\/documentation\/Brunow\/Archive","doc:\/\/Brunow\/documentation\/Brunow\/2023"]]},"identifier":{"url":"doc:\/\/Brunow\/documentation\/Brunow\/10-21-here-be-dragons-snapshot-testing-edition","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Stumbling over complexity and hiding it with opinions."}],"primaryContentSections":[{"content":[{"text":"Backstory","level":2,"anchor":"Backstory","type":"heading"},{"style":"note","type":"aside","name":"In case you are unfamiliar","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Here_be_dragons","isActive":true}]}]},{"type":"paragraph","inlineContent":[{"text":"As I mentioned ","type":"text"},{"overridingTitle":"in my previous blog post","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud","overridingTitleInlineContent":[{"text":"in my previous blog post","type":"text"}],"isActive":true,"type":"reference"},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"I am working on a small side-project app that allows me to play with some tools"},{"type":"text","text":" "},{"text":"from the Apple software development ecosystem. In that blog post I talked about","type":"text"},{"type":"text","text":" "},{"text":"the steps needed to get the Swift Snapshot Testing library working with Xcode","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Cloud but that was only the beginning of my snapshot testing saga. It seemed"},{"text":" ","type":"text"},{"type":"text","text":"like every time I wanted to take a snapshot of a new view I bumped up against"},{"type":"text","text":" "},{"type":"text","text":"another problem. In this post I’m going to talk through what I bumped up"},{"text":" ","type":"text"},{"text":"against, the reasons why this very good library still has those rough bits, and","type":"text"},{"text":" ","type":"text"},{"text":"how I will improve the situation for myself and my team by making opinionated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"choices."}]},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"While I will discuss some pain points when using the ","type":"text"},{"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing","isActive":true,"type":"reference"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"I cannot emphasize enough how good I think the library is. Hopefully","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"none of the things I say will lead anyone reading this to any other opinion."}],"type":"paragraph"}],"type":"aside"},{"level":2,"anchor":"A-Little-Background-on-Snapshot-Testing","text":"A Little Background on Snapshot Testing","type":"heading"},{"inlineContent":[{"text":"Snapshot testing is a type of automated test where you provide an input to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"snapshot assertion method, that snapshot assertion method creates a value for"},{"type":"text","text":" "},{"type":"text","text":"that input, and then checks to ensure that that value matches the previous"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/softwareengineering.stackexchange.com\/a\/358792","type":"reference"},{"text":" value for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that input."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This blog post is about snapshot testing where the input is a view"},{"text":" ","type":"text"},{"type":"text","text":"and the value created by the snapshot assertion method is an image. If I provide"},{"text":" ","type":"text"},{"text":"a view for my app I expect an image that looks just like a screenshot of my app.","type":"text"}]},{"text":"Some initial pain points","level":2,"type":"heading","anchor":"Some-initial-pain-points"},{"inlineContent":[{"text":"I’ll start by talking through some of the painful things I’ve run into and hope","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that they give a sense of the landscape that I’m dealing with when doing"},{"type":"text","text":" "},{"type":"text","text":"something that sounds simple like “just add snapshot tests”. All this pain"},{"type":"text","text":" "},{"type":"text","text":"happened over a single week around a month ago."}],"type":"paragraph"},{"type":"heading","level":3,"text":"Bumping into macOS Sonoma","anchor":"Bumping-into-macOS-Sonoma"},{"type":"paragraph","inlineContent":[{"text":"I published my blog post on using snapshot tests with Xcode Cloud and everything","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"was working great with tests passing both locally and remotely. Since I have"},{"text":" ","type":"text"},{"type":"text","text":"been using snapshot tests for a while that was a bit surprising to me, but I’ll"},{"text":" ","type":"text"},{"type":"text","text":"touch on why that is a bit later. Days or weeks went by, I’d made changes that I"},{"text":" ","type":"text"},{"text":"no longer remembered (or maybe the world changed around me), and my snapshot","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"tests were no longer passing on Xcode Cloud. I was especially upset by this"},{"type":"text","text":" "},{"type":"text","text":"because I’d recently shared that blog post about how to get things working and"},{"type":"text","text":" "},{"type":"text","text":"felt guilty for spreading misinformation."}]},{"type":"paragraph","inlineContent":[{"text":"Once I got some time to look into the issue I realized that one of two things","type":"text"},{"type":"text","text":" "},{"text":"had happened:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"I had changed the Xcode Cloud environment to run on macOS Sonoma, or","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The latest version of macOS Sonoma changed the behavior of the snapshots"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basically, the issue had to do with running my snapshot tests on macOS Sonoma on"},{"text":" ","type":"text"},{"type":"text","text":"Xcode Cloud (running on Sonoma locally to record the snapshots seems fine) which"},{"text":" ","type":"text"},{"type":"text","text":"had just made it to the release candidate stage. Changing the Xcode Cloud"},{"text":" ","type":"text"},{"type":"text","text":"environment back to macOS Ventura resolved the issue and I was able to move on"},{"type":"text","text":" "},{"text":"knowing that I had not completely misled people.","type":"text"}]},{"level":3,"type":"heading","text":"Bumping into TabView","anchor":"Bumping-into-TabView"},{"inlineContent":[{"type":"text","text":"Someone in the Point-Free Slack mentioned that the snapshots they generated of"},{"type":"text","text":" "},{"type":"text","text":"their tab bar did not look correct. I hadn’t tried creating snapshots for the"},{"text":" ","type":"text"},{"type":"text","text":"tab bar in my app, so I hadn’t run into the issue before, but I was quickly able"},{"type":"text","text":" "},{"text":"to reproduce. The snapshots looked like this (the unselected tab bar icons are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"white which makes them very difficult to see):"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"miscoloredTabBar"}]},{"inlineContent":[{"text":"I found a workaround — by adding this code before my ","type":"text"},{"code":"assertSnapshot","type":"codeVoice"},{"text":" ","type":"text"},{"text":"calls the tab bar would render correctly:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["UITabBar.appearance().unselectedItemTintColor = .systemGray"]},{"type":"paragraph","inlineContent":[{"text":"This feels a bit hacky to me but it worked.","type":"text"}]},{"type":"heading","anchor":"Bumping-into-List","level":3,"text":"Bumping into List"},{"inlineContent":[{"text":"The bumps are piling up but at least I can bandage them — I’ve found","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sometimes hacky, sometimes regressive, workarounds. As long as Apple always"},{"text":" ","type":"text"},{"text":"supports macOS Ventura then I don’t need to worry about the issue with Sonoma,","type":"text"},{"text":" ","type":"text"},{"text":"right?","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But throughout these fights I’d been ignoring a glaring issue with the snapshots"},{"type":"text","text":" "},{"type":"text","text":"of the SwiftUI "},{"type":"codeVoice","code":"List"},{"text":" in my app. Take a look at this monstrosity:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"misrenderedSwiftUIList"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"OK maybe calling it a monstrosity is harsh. And the contrast between the light"},{"type":"text","text":" "},{"type":"text","text":"gray and the white is not great so the issue may be difficult to see, but each"},{"type":"text","text":" "},{"type":"text","text":"row in the "},{"type":"codeVoice","code":"List"},{"text":" has rounded corners instead of only the top leading, top","type":"text"},{"type":"text","text":" "},{"type":"text","text":"trailing on the first item and bottom leading and bottom trailing on the last"},{"type":"text","text":" "},{"text":"item having rounded corners. What is going on there?","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"I tried a lot of different things to try to get this to render properly."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"I thought that perhaps it was a timing issue and the UI needed more time to"},{"type":"text","text":" "},{"text":"layout so I increased the wait time before capturing the snapshot. Nope.","type":"text"}]},{"inlineContent":[{"type":"text","text":"I thought that maybe the wait time wasn’t enough and that I needed to increase"},{"type":"text","text":" "},{"text":"the speed of the animations so I tried setting the ","type":"text"},{"code":"window.layer.speed = 100","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Nope."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"I found ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667"},{"text":" ","type":"text"},{"text":"on the snapshot testing library and I was first encouraged by","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1462270406"},{"type":"text","text":" "},{"type":"text","text":"and then disappointed when "},{"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1463810906","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"I was out of options. I tried it anyway. And it worked! 🎉"}]},{"anchor":"Why-Did-I-Keep-Bumping-into-Things","type":"heading","text":"Why Did I Keep Bumping into Things?","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"I’ve said before, and I’ll say it again now: Point-Free’s snapshot testing"},{"type":"text","text":" "},{"text":"library is great. So why am I running into so many issues? Why is this so","type":"text"},{"type":"text","text":" "},{"type":"text","text":"painful? I think those three pain points are instructive so let’s talk through"},{"text":" ","type":"text"},{"type":"text","text":"the root causes of each of those."}]},{"text":"macOS Sonoma Rendering Differently on Xcode Cloud’s Intel machines","type":"heading","anchor":"macOS-Sonoma-Rendering-Differently-on-Xcode-Clouds-Intel-machines","level":3},{"style":"note","type":"aside","name":"Note from the future","content":[{"inlineContent":[{"text":"Since writing this blog post I’ve solved the problem","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with simulators on Sonoma and wrote about it in "},{"type":"reference","isActive":true,"overridingTitle":"a new blog post about controlling simulators on Xcode Cloud","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/11-30-follow-up-snapshot-testing-xcode-cloud-sonoma","overridingTitleInlineContent":[{"type":"text","text":"a new blog post about controlling simulators on Xcode Cloud"}]},{"type":"text","text":"."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"strikethrough","inlineContent":[{"type":"text","text":"I have absolutely no insight into why I’m seeing the behavior I’m seeing on"},{"type":"text","text":" "},{"text":"Xcode Cloud but I can make some guesses based upon what I do know. I know that","type":"text"},{"type":"text","text":" "},{"text":"Apple is going through a processor transition where their CPUs have changed from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"being manufactured by Intel to being manufactured by Apple. Along with this CPU"},{"type":"text","text":" "},{"type":"text","text":"change comes GPU changes as well since Apple is creating their own GPUs."}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Again, I don’t know the details, but this foundational change is somehow leaking","type":"text"},{"text":" ","type":"text"},{"text":"into our snapshot testing when running macOS Sonoma. I think the only people","type":"text"},{"text":" ","type":"text"},{"text":"that can fix this work at Apple so I filed FB_INSERT_FEEDBACK_HERE.","type":"text"}],"type":"strikethrough"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That struck out code was my first attempt at explaining the behavior just a"},{"text":" ","type":"text"},{"type":"text","text":"week or two ago while first drafting this post — I’m sharing it here to give"},{"text":" ","type":"text"},{"type":"text","text":"a little insight into the circuitous path I took to get to an understanding of"},{"type":"text","text":" "},{"text":"these issues. Since then","type":"text"},{"type":"text","text":" "},{"identifier":"#Using-strong-opinions-in-higher-level-libraries","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"So could that be the reason why the rendering is different on macOS Sonoma?","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Let’s cook up a test failure to see by adding this to our snapshotting code:"}],"type":"paragraph"},{"syntax":"swift","code":["if Locale.preferredLanguages.contains(where: {","  $0.contains(\"ar\") || $0.contains(\"hy\")","}) {","  XCTFail(","    \"\"\"","    Running on a simulator with Arabic or Armenian in its preferred","    languages which will cause the snapshots to be rendered differently.","    Please remove Arabic and\/or Armenian from the simulator's preferred","    languages (Settings > General > Language & Region).","    \"\"\",","    file: file,","    line: line","  )","  return","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we’ll run the tests again on Xcode Cloud on a macOS Sonoma machine:"}]},{"inlineContent":[{"identifier":"arabicOrArmenianTestFailure","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"Well there we go. That same test passes on macOS Ventura. But that leads me to","type":"text"},{"type":"text","text":" "},{"text":"wonder “how many different preferred languages are setup in the Sonoma","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"simulator?”"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"numberOfPreferredLanguagesXcodeCloudSonoma"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"OK 34 preferred languages, cool. Running this same test on macOS Ventura returns"},{"text":" ","type":"text"},{"type":"text","text":"1 preferred language. Now I’m a bit more curious – which languages did they"},{"type":"text","text":" "},{"text":"choose? Here they are as of October 2023 (notice that Arabic is in this list –","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"I talk about why that is noteworthy in a later section that I linked above):"}],"type":"paragraph"},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[]}],[{"type":"paragraph","inlineContent":[]}],[{"type":"paragraph","inlineContent":[]}],[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[]}]],[[{"type":"paragraph","inlineContent":[{"text":"en","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"ja"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"sv"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"el"}]}],[{"inlineContent":[{"text":"pt-BR","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"th","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"id"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"fr"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"es"}]}],[{"inlineContent":[{"type":"text","text":"ru"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"he","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"pt-PT"}]}],[{"type":"paragraph","inlineContent":[{"text":"cs","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"ms","type":"text"}]}]],[[{"inlineContent":[{"text":"de","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"it","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"pl","type":"text"}]}],[{"inlineContent":[{"text":"ro","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"da","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"hu"}]}],[{"inlineContent":[{"type":"text","text":"vi"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"zh-Hans"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"nl"}]}],[{"inlineContent":[{"type":"text","text":"tr"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"sk"}]}],[{"inlineContent":[{"text":"fi","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"ca"}]}],[{"inlineContent":[{"type":"text","text":"es-419"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"zh-Hant"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"ko"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"ar"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"uk"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"nb"}]}],[{"inlineContent":[{"type":"text","text":"hr"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[]}]]]},{"type":"paragraph","inlineContent":[{"type":"text","text":"OK so it is great that the simulators include languages other than English –"},{"type":"text","text":" "},{"type":"text","text":"app development is not something that only happens in the English speaking"},{"type":"text","text":" "},{"text":"world – but this does add more complexity to our snapshot testing story. I’ve","type":"text"},{"type":"text","text":" "},{"type":"text","text":"created "},{"identifier":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/431","isActive":true,"type":"reference"},{"text":" to ask for control over","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the preferred languages in Xcode Cloud. Until we get that we may have to make"},{"type":"text","text":" "},{"type":"text","text":"our local simulators mirror what is setup on Xcode Cloud."}]},{"text":"TabView misrendering","anchor":"TabView-misrendering","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Let’s take a look at","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Snapshotting\/UIViewController.swift#L48","isActive":true},{"text":":","type":"text"}]},{"syntax":"swift","code":["\/\/\/   - drawHierarchyInKeyWindow: Utilize the simulator's key window in order to render","\/\/\/     `UIAppearance` and `UIVisualEffect`s. This option requires a host application for your","\/\/\/     tests and will _not_ work for framework test targets."],"type":"codeListing"},{"inlineContent":[{"text":"This is the documentation for a strategy that we have not been using and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"therefore we are not getting this behavior. That part about the "},{"type":"codeVoice","code":"UIAppearance"},{"type":"text","text":" "},{"type":"text","text":"might be the answer to our question about why the tab bar is not being rendered"},{"type":"text","text":" "},{"text":"correctly. Perhaps those unselected tab colors are being set on the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIAppearance"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Aside","content":[{"inlineContent":[{"text":"Surprisingly the Snapshot Testing libraries documentation around the","type":"text"},{"text":" ","type":"text"},{"text":"differences between the view controller snapshotting strategies is lacking a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"larger discussion about when to choose which. I’ve opened "},{"isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/pull\/796","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"paragraph","inlineContent":[{"text":"So I have a theory about what is going on but I think we need to dig in on what","type":"text"},{"type":"text","text":" "},{"text":"this ","type":"text"},{"code":"drawHierarchyInKeyWindow","type":"codeVoice"},{"text":" parameter does. Let’s do that while looking at","type":"text"},{"type":"text","text":" "},{"text":"the rendering issues with ","type":"text"},{"type":"codeVoice","code":"List"},{"type":"text","text":"."}]},{"anchor":"List-misrendering","text":"List misrendering","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"To try to understand what might be going on with the ","type":"text"},{"type":"codeVoice","code":"List"},{"type":"text","text":" I think we need"},{"type":"text","text":" "},{"type":"text","text":"to talk through how the snapshot images are created. To do so we can dig through"},{"type":"text","text":" "},{"type":"text","text":"the code (yay open source!) and find "},{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L990C46-L990C46","isActive":true},{"text":":","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["...","  if drawHierarchyInKeyWindow {","    view.drawHierarchy(in: view.bounds, afterScreenUpdates: true)","  } else {","    view.layer.render(in: ctx.cgContext)","  }","..."]},{"name":"Aside","content":[{"type":"paragraph","inlineContent":[{"text":"It would be nice if this code block had line numbers so I could refer to them","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to improve communication. I created an"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-docc\/issues\/737"},{"text":"","type":"text"},{"type":"text","text":" "},{"text":"for that.","type":"text"}]}],"type":"aside","style":"note"},{"type":"paragraph","inlineContent":[{"text":"Depending on the value of ","type":"text"},{"type":"codeVoice","code":"drawHierarchyInKeyWindow"},{"type":"text","text":" either the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622589-drawhierarchy"},{"type":"text","text":" "},{"text":"or the ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/quartzcore\/calayer\/1410909-render","type":"reference","isActive":true},{"type":"text","text":" method is called."},{"text":" ","type":"text"},{"type":"text","text":"Both of these are methods provided by Apple that have been in the SDK for a long"},{"type":"text","text":" "},{"text":"time. We can look up their documentation (linked in the method names) but what","type":"text"},{"type":"text","text":" "},{"type":"text","text":"we find isn’t super useful, at least not to me. Here is a snippet from the"},{"type":"text","text":" "},{"type":"codeVoice","code":"drawHierarchy"},{"type":"text","text":" documentation:"}]},{"content":[{"inlineContent":[{"type":"text","text":"Renders a snapshot of the complete view hierarchy as visible onscreen"},{"text":" ","type":"text"},{"type":"text","text":"into the current context."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Quote"},{"type":"paragraph","inlineContent":[{"type":"text","text":"OK that sounds great, that’s exactly what we want. So why do we need the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"render"},{"type":"text","text":" method? Maybe its documentation gives us a clue:"}]},{"style":"note","name":"Quote","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Renders the layer and its sublayers into the specified context."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"OK so the difference is that "},{"type":"codeVoice","code":"render"},{"text":" only renders a layer and ","type":"text"},{"code":"drawHierarchy","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"renders the complete view hierarchy. But to do that you need a complete view"},{"text":" ","type":"text"},{"text":"hierarchy which we see on ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L940C36-L940C36"},{"text":":","type":"text"}]},{"code":["...","if drawHierarchyInKeyWindow {","  guard let keyWindow = getKeyWindow() else {","    fatalError(\"'drawHierarchyInKeyWindow' requires tests to be run in a host application\")","  }","..."],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To draw the complete view hierarchy in the key window we need something called a"},{"type":"text","text":" "},{"type":"text","text":"key window and we can only get that with something called a host application."}],"type":"paragraph"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Technically we only need to be running in a host application to be able to","type":"text"},{"text":" ","type":"text"},{"text":"draw the complete view hierarchy using ","type":"text"},{"type":"codeVoice","code":"drawHierarchy"},{"type":"text","text":" but the snapshot"},{"text":" ","type":"text"},{"type":"text","text":"testing library does not support using that method without also using the key"},{"text":" ","type":"text"},{"text":"window.","type":"text"}]}]},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiapplication\/1622924-keywindow","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"is the application window with which the user is interacting. That property I"},{"type":"text","text":" "},{"type":"text","text":"linked to on "},{"code":"UIApplication","type":"codeVoice"},{"text":" is deprecated since Apple no longer wants us to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"think about an application having a single window and instead to think in terms"},{"text":" ","type":"text"},{"type":"text","text":"of a multi-window world, but that deprecation doesn’t matter for our purposes"},{"type":"text","text":" "},{"text":"since the concept of a key window is still valid.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A host application is an application within which we can run our tests. This"},{"type":"text","text":" "},{"text":"gets a bit complex in the current Apple ecosystem when you choose to use Swift","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Package Manager to modularize your dependencies like I did in the last blog"},{"type":"text","text":" "},{"text":"post. Swift packages have no concept of a host application and therefore tests","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in Swift packages cannot be run inside a host application. Since I’m building an"},{"type":"text","text":" "},{"text":"iOS app I have a host application at my disposal which I can use and I’ll talk","type":"text"},{"type":"text","text":" "},{"type":"text","text":"about how to do that a bit later. For now, let’s get back to these two different"},{"type":"text","text":" "},{"text":"methods for creating snapshots of our user interface.","type":"text"}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"The host application story for Swift packages could be improved and I’m"},{"type":"text","text":" "},{"text":"not the first to notice that —","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/forums.swift.org\/t\/host-application-for-spm-tests\/24363","isActive":true},{"text":" ","type":"text"},{"text":"was started in 2019. While I like to take action to try to improve the little","type":"text"},{"type":"text","text":" "},{"text":"parts of the world that I can, I’m not sure what action to take here.","type":"text"}],"type":"paragraph"}],"name":"Aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"What we’ve seen so far is two conditionals with two branches each and therefore"},{"type":"text","text":" "},{"text":"4 different ways that snapshots could theoretically be captured (based upon the","type":"text"},{"text":" ","type":"text"},{"text":"conditional’s logic only 3 of these possibilities can actually be used in the","type":"text"},{"text":" ","type":"text"},{"text":"snapshot testing library but I think it is useful to think through them all):","type":"text"}]},{"header":"row","type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Method"}]}],[{"inlineContent":[{"type":"text","text":"Window"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Configurable without code changes"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"drawHierarchy"}]}],[{"inlineContent":[{"type":"codeVoice","code":"UIWindow()"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"No","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"drawHierarchy"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key window"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Yes"}]}]],[[{"inlineContent":[{"type":"codeVoice","code":"render"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIWindow()"}]}],[{"inlineContent":[{"type":"text","text":"Yes"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"code":"render","type":"codeVoice"}]}],[{"inlineContent":[{"text":"Key window","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Yes"}],"type":"paragraph"}]]]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then my followup question to that table is “do any of these configurations fix"},{"text":" ","type":"text"},{"text":"the bad behavior I’m seeing with my ","type":"text"},{"code":"List","type":"codeVoice"},{"type":"text","text":"?” (I had to modify the snapshot"},{"text":" ","type":"text"},{"type":"text","text":"testing code to test the first “impossible” configuration):"}]},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Method"}]}],[{"type":"paragraph","inlineContent":[{"text":"Window","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Fixes ","type":"text"},{"code":"List","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"drawHierarchy","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIWindow()"}]}],[{"type":"paragraph","inlineContent":[{"text":"Yes*","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"drawHierarchy"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key window"}]}],[{"type":"paragraph","inlineContent":[{"text":"Yes","type":"text"}]}]],[[{"inlineContent":[{"code":"render","type":"codeVoice"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIWindow()"}]}],[{"type":"paragraph","inlineContent":[{"text":"No","type":"text"}]}]],[[{"inlineContent":[{"code":"render","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Key window"}],"type":"paragraph"}],[{"inlineContent":[{"text":"No","type":"text"}],"type":"paragraph"}]]],"type":"table","header":"row"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"I added the asterisk on the first line because while the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" "},{"type":"text","text":"was rendered properly the tab bar’s tabs were not properly positioned as you"},{"type":"text","text":" "},{"type":"text","text":"can see in this diff where the tab bar is positioned too low in the view:"},{"type":"text","text":" "},{"type":"image","identifier":"diffBetweenDrawHierarchyKeyWindowUIWindow"}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"text":"So the main difference in our ","type":"text"},{"type":"codeVoice","code":"List"},{"text":" rendering is the method being called.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We’ve already looked at the Apple documentation and I didn’t see any clues there"},{"text":" ","type":"text"},{"text":"as to the underlying reason behind the differences in behavior — that","type":"text"},{"text":" ","type":"text"},{"text":"documentation did not even mention the difference in ","type":"text"},{"type":"codeVoice","code":"UIAppearance"},{"text":" mentioned","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by the snapshot testing documentation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After some internet searching I found"},{"type":"text","text":" "},{"identifier":"https:\/\/stackoverflow.com\/a\/25704861","type":"reference","isActive":true},{"type":"text","text":" that"},{"type":"text","text":" "},{"text":"talks about the implementation differences between those two methods:","type":"text"}]},{"name":"Quote about drawHierarchy method","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method "},{"code":"drawViewHierarchyInRect:afterScreenUpdates:","type":"codeVoice"},{"type":"text","text":" performs its"},{"type":"text","text":" "},{"text":"operations on the GPU as much as possible, and much of this work will probably","type":"text"},{"type":"text","text":" "},{"type":"text","text":"happen outside of your app’s address space in another process. Passing YES as"},{"type":"text","text":" "},{"type":"text","text":"the afterScreenUpdates: parameter to "},{"code":"drawViewHierarchyInRect:afterScreenUpdates:","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"will cause a Core Animation to flush all of its buffers in your task and in"},{"type":"text","text":" "},{"type":"text","text":"the rendering task. As you may imagine, there’s a lot of other internal stuff"},{"type":"text","text":" "},{"text":"that goes on in these cases too.","type":"text"}]}],"type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"In comparison, the method ","type":"text"},{"code":"renderInContext:","type":"codeVoice"},{"type":"text","text":" performs"},{"text":" ","type":"text"},{"text":"its operations inside of your app’s address space and does not use the GPU","type":"text"},{"text":" ","type":"text"},{"text":"based process for performing the work…This route is not as efficient as it","type":"text"},{"type":"text","text":" "},{"text":"does not use the GPU based task. Also, it is not as accurate for screen","type":"text"},{"type":"text","text":" "},{"type":"text","text":"captures as it may exclude blurs and other Core Animation features that are"},{"type":"text","text":" "},{"type":"text","text":"managed by the GPU task."}]}],"type":"aside","name":"Quote about render method","style":"note"},{"type":"paragraph","inlineContent":[{"text":"So the ","type":"text"},{"code":"render(in:)","type":"codeVoice"},{"text":" method is both less efficient and creates less accurate","type":"text"},{"type":"text","text":" "},{"text":"results!?! 😲 Why would we want to consider it as an option?","type":"text"}]},{"inlineContent":[{"text":"Well, as we noted before, the ","type":"text"},{"code":"drawHierarchy","type":"codeVoice"},{"type":"text","text":" method only works when the tests"},{"type":"text","text":" "},{"text":"are hosted in an application. And as I mentioned before, at this point in time","type":"text"},{"type":"text","text":" "},{"text":"there is no way for a Swift package’s tests to be hosted in an application","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"without a separate Xcode project. The "},{"code":"render(in:)","type":"codeVoice"},{"text":" method is the only choice to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use image based snapshot tests in a Swift package. Running tests inside of a"},{"text":" ","type":"text"},{"type":"text","text":"host application is also much slower than running them standalone and folks"},{"type":"text","text":" "},{"type":"text","text":"might want to make that tradeoff of accuracy for test speed."}],"type":"paragraph"},{"name":"Aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"I’ve created a "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/discussions\/797"},{"text":" around whether","type":"text"},{"type":"text","text":" "},{"code":"drawViewHierarchy","type":"codeVoice"},{"type":"text","text":" should be the default codepath if the tests are being run"},{"type":"text","text":" "},{"type":"text","text":"inside a host application."}]}],"type":"aside"},{"inlineContent":[{"text":"I think it is also worth noting that neither of these API were created with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"intent of supporting snapshot testing. Without intentional support of that use"},{"type":"text","text":" "},{"type":"text","text":"case we can’t expect the Apple folks working on those API and supporting them"},{"type":"text","text":" "},{"type":"text","text":"across OS versions, processor architectures, and everything else changing to"},{"type":"text","text":" "},{"type":"text","text":"ensure that they work for this purpose. That being said, I believe that Apple"},{"type":"text","text":" "},{"type":"text","text":"should consider snapshot testing to be a first-class use case for these API (or"},{"text":" ","type":"text"},{"text":"to provide separate API for that purpose) and therefore I’ve filed","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/430","isActive":true},{"text":" for that.","type":"text"}],"type":"paragraph"},{"anchor":"Rough-edges-in-low-level-general-libraries","level":2,"text":"Rough edges in low-level, general libraries","type":"heading"},{"inlineContent":[{"type":"text","text":"As I’ve mentioned before I think the Swift Snapshot Testing library is very"},{"text":" ","type":"text"},{"text":"good. But I’ve also typed a fair number of words and spent a large amount of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"time working around these rough edges on the API. How can I think it is a good"},{"text":" ","type":"text"},{"text":"library and think it has rough edges? Do I have a poor sense of quality?","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"I may have a poor sense of quality elsewhere (I did once watch an entire movie"},{"text":" ","type":"text"},{"type":"text","text":"about a homicidal tire named Robert) but I don’t think that is the case here."},{"type":"text","text":" "},{"type":"text","text":"These rough edges come from two things: 1) the library authors are building upon"},{"text":" ","type":"text"},{"text":"lower level things that have rough edges, and 2) the library is low-level and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"general purpose."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The only way to cover over rough edges in the things that you are building on"},{"text":" ","type":"text"},{"type":"text","text":"top of is to make decisions for the end users of the library. But making those"},{"text":" ","type":"text"},{"text":"decisions for the end users takes away the end users’ power and flexibility.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Like most engineering, this is a trade-off and I think the authors of this"},{"type":"text","text":" "},{"text":"library made the right choice. My only minor gripe would be that, as I mentioned","type":"text"},{"type":"text","text":" "},{"text":"before, the documentation around these trade-offs is lacking and therefore I, as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an end user of this library, am not able to make as informed of a decision as I"},{"type":"text","text":" "},{"text":"would like.","type":"text"}]},{"level":2,"type":"heading","text":"Using strong opinions in higher level libraries","anchor":"Using-strong-opinions-in-higher-level-libraries"},{"inlineContent":[{"text":"If I know my end users (or if I’m my own end user) then I can make informed","type":"text"},{"text":" ","type":"text"},{"text":"decisions for them which will cover over most of the rough edges from the lower","type":"text"},{"type":"text","text":" "},{"text":"levels without taking away the power they need. There will be exceptions, like","type":"text"},{"type":"text","text":" "},{"text":"the rendering differences in macOS Sonoma on Xcode Cloud, but the experience can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be much simpler. The trade-off here is that I need to ensure the environment the"},{"type":"text","text":" "},{"type":"text","text":"end user is working in matches the expectations of my strong opinions — they"},{"type":"text","text":" "},{"text":"need to have their tests setup the proper way and have them hosted inside an","type":"text"},{"text":" ","type":"text"},{"text":"application.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But even my strongest opinions can’t cover over all the issues and it is in"},{"type":"text","text":" "},{"text":"those cases that we need to provide other ergonomics. For example, if you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"capture your golden snapshot on a simulator that renders at a display scale of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@3x"},{"type":"text","text":" and then run a follow-up test on a simulator that renders at a display"},{"text":" ","type":"text"},{"type":"text","text":"scale of "},{"code":"@2x","type":"codeVoice"},{"type":"text","text":" the test will fail. Similar failures will happen with different"},{"type":"text","text":" "},{"type":"text","text":"iOS versions due to minor differences in text layout, and with different"},{"text":" ","type":"text"},{"type":"text","text":"simulators based upon the size of their status bar. In those cases we can find"},{"type":"text","text":" "},{"type":"text","text":"way to gently nudge the user onto the right path."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Even this approach has some flaws. After I finished that paragraph I went to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"test out a change to see if I could make my library more ergonomic when a"},{"text":" ","type":"text"},{"text":"simulator was set to a different language and found that all my tests were","type":"text"},{"text":" ","type":"text"},{"text":"failing. Apparently if Arabic is in the list of languages — even if it isn’t","type":"text"},{"type":"text","text":" "},{"text":"the default language — the simulator will render differently. Now that I’ve","type":"text"},{"type":"text","text":" "},{"text":"figured that out I can add a check for that to the library but I can never be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sure that I’ve covered every rough edge."}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"I went down a long path to try to create an example project that would show","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the issue of the simulator rendering differently when Arabic is in the list of"},{"type":"text","text":" "},{"type":"text","text":"preferred languages. Some ways down that path I asked myself “does this"},{"text":" ","type":"text"},{"type":"text","text":"happen on device as well?” and, "},{"inlineContent":[{"type":"text","text":"turns out"}],"type":"emphasis"},{"text":", the answer is yes. I was going to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"file a Feedback about this but I think the behavior, while unexpected to me,"},{"type":"text","text":" "},{"type":"text","text":"is correct. If an app knows that a user prefers Arabic then they might need to"},{"text":" ","type":"text"},{"type":"text","text":"show Arabic text in their app and therefore they need the SF Arabic font and"},{"text":" ","type":"text"},{"type":"text","text":"the extra vertical height it has."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This led me to think “which other languages might behave similarly?” I have"},{"text":" ","type":"text"},{"text":"not tested every language to find out but I did identify another language that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changes the rendering like Arabic does. I started on this"},{"type":"text","text":" "},{"identifier":"https:\/\/developer.apple.com\/fonts\/","isActive":true,"type":"reference"},{"type":"text","text":" which"},{"text":" ","type":"text"},{"text":"describes a category of SF Script Extensions into which SF Arabic falls. I","type":"text"},{"text":" ","type":"text"},{"text":"tested the other script extensions and found that Armenian behaves similarly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to Arabic."}]}]},{"level":2,"anchor":"My-opinions","text":"My opinions","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All snapshot tests should be hosted.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All snapshot tests should use "},{"code":"drawHierarchyInKeyWindow = true","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Snapshots should usually be generated on the latest device\/OS combination.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Snapshots should fail early, with a helpful failure method, when the snapshot","type":"text"},{"type":"text","text":" "},{"text":"environment is different than we expect.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Every view should be snapshotted in the same set of standard environments.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Users should have the option to create a “throwaway” snapshot for situations"},{"type":"text","text":" "},{"text":"where dependencies or caches need to be setup to capture the right data.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Snapshots should be rendered on a small device size to be able to find","type":"text"},{"type":"text","text":" "},{"type":"text","text":"layout issues at that size."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Next let’s talk about how to setup the environment for these opinions and the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"helper code I’ve created to work with them."}]},{"type":"heading","anchor":"Setting-up-hosted-tests","level":3,"text":"Setting up hosted tests"},{"type":"paragraph","inlineContent":[{"text":"Hosted tests need to live inside an app’s XCProject or XCWorkspace and need","type":"text"},{"type":"text","text":" "},{"text":"their own target. Here are the steps to set up the hosted tests:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create a “Unit Testing Bundle” target. This could be named “SnapshotTests” if","type":"text"},{"type":"text","text":" "},{"text":"you want to limit the scope of the kinds of tests that will be in this target or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you could name it “Hosted Tests” since there might be other tests you want to"},{"text":" ","type":"text"},{"text":"write in the future that won’t be snapshot tests but will need to be hosted. One","type":"text"},{"type":"text","text":" "},{"type":"text","text":"example would be live implementation tests for code that interacts with the"},{"text":" ","type":"text"},{"text":"keychain. Make sure that your app is selected as the “Target to be Tested”","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"because this is what makes the tests hosted."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you have existing snapshot tests in your Swift package, copy them into the","type":"text"},{"text":" ","type":"text"},{"text":"folder created for the new test target. If you don’t have existing snapshot","type":"text"},{"text":" ","type":"text"},{"text":"tests then create the tests in that folder.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add the Swift Snapshot Testing dependency to the app project. Ensure that it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is only added to the test target and not to the app target."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If using TCA, ensure that the app’s logic is not being run at the same time"},{"text":" ","type":"text"},{"text":"as the snapshot tests by wrapping the code that creates the store with","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"if _XCIsTesting == false { }"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add the tests in the test target to the test plan."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If you’re using Xcode Cloud for CI, update the","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud#Create-a-symlink-in-the-ciscripts-directory-to-where-our-snapshots-are-stored","overridingTitle":"symlink in the ci_scripts folder","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"symlink in the "},{"code":"ci_scripts","type":"codeVoice"},{"type":"text","text":" folder"}]},{"type":"text","text":" to point to the new location for"},{"type":"text","text":" "},{"type":"text","text":"snapshots."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that we have setup hosted tests we have no excuse for not using"},{"type":"text","text":" "},{"type":"text","text":"accessibility snapshot tests. Unfortunately adding them is a little more"},{"type":"text","text":" "},{"type":"text","text":"complicated than simply importing the"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot","isActive":true},{"type":"text","text":" because nothing in"},{"type":"text","text":" "},{"text":"technology is easy.","type":"text"}]},{"type":"heading","anchor":"While-were-at-it-lets-setup-accessibility-snapshot-tests","level":3,"text":"While we’re at it, let’s setup accessibility snapshot tests"},{"type":"paragraph","inlineContent":[{"text":"Before we get into setting up the accessibility snapshot tests let me give you a","type":"text"},{"type":"text","text":" "},{"text":"quick sales pitch for them. Accessibility snapshot tests give anyone who uses","type":"text"},{"type":"text","text":" "},{"type":"text","text":"them a superpower. That superpower is to be able to look at a user interface and"},{"type":"text","text":" "},{"type":"text","text":"know how a VoiceOver user would experience that user interface. Here’s an"},{"type":"text","text":" "},{"type":"text","text":"example:"}]},{"inlineContent":[{"type":"image","identifier":"accessibilitySnapshotTestExample"}],"type":"paragraph"},{"inlineContent":[{"text":"This snapshot isn’t perfect – the order of the items in the navigation bar is","type":"text"},{"text":" ","type":"text"},{"text":"incorrect, they should be announced before the list rather than after (I created","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/issues\/168"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this). But even with that flaw this is fantastic – I can easily see that the"},{"type":"text","text":" "},{"text":"order of the elements inside each row doesn’t make sense. The name and quantity","type":"text"},{"type":"text","text":" "},{"text":"should be grouped together because that is related information that shouldn’t be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interrupted by the edit button. The alternative to these accessibility snapshot"},{"text":" ","type":"text"},{"text":"tests is either firing up Accessibility Inspector or building to device with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"VoiceOver on and manually stepping through each element. And as a reviewer on a"},{"type":"text","text":" "},{"text":"pull request who probably doesn’t have time to do that for every review this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tool is fantastic."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Anyhow, I hope I’ve convinced you to at least try the accessibility snapshot"},{"text":" ","type":"text"},{"text":"tests and we can move on to adding them to our hosted tests.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Our first step is to add the Accessibility Snapshot Testing dependency to our"},{"type":"text","text":" "},{"type":"text","text":"app project, and specifically the hosted tests target (just like for the"},{"type":"text","text":" "},{"type":"text","text":"snapshot testing dependency). But unfortunately the current version of the"},{"type":"text","text":" "},{"text":"Accessibility Snapshot Testing library does not support precision or perceptual","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"precision which are both things we need since we are working across Apple"},{"text":" ","type":"text"},{"type":"text","text":"Silicon and Intel machines and each of those machines renders things just"},{"text":" ","type":"text"},{"text":"differently enough to not completely match snapshots from the other processor","type":"text"},{"type":"text","text":" "},{"text":"type (not needing to set these precision parameters in my first blog post was","type":"text"},{"type":"text","text":" "},{"text":"the surprising thing I alluded to near the beginning of this post). Those things","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cannot easily be added to the library because:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Accessibility Snapshot Testing supports CocoaPods, and","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Swift Snapshot Testing dropped support for CocoaPods at the same time it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"added perceptual precision"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To work around this I’ve "},{"isActive":true,"type":"reference","identifier":"https:\/\/gist.github.com\/DavidBrunow\/9aade5980649c660d73795d7c9b5b056"},{"type":"text","text":" inspired by"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/pull\/143"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This allows us to set the precision and perceptual precision on our","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"accessibility snapshots. Next I’ll share the code that implements my opinions"},{"text":" ","type":"text"},{"type":"text","text":"and ties everything together."}],"type":"paragraph"},{"level":3,"anchor":"My-opinionated-helper-code","type":"heading","text":"My opinionated helper code"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This mostly builds upon the"},{"type":"text","text":" "},{"isActive":true,"overridingTitleInlineContent":[{"text":"helper code I shared in my snapshot tests on Xcode Cloud post","type":"text"}],"type":"reference","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud#Creating-Something-Reusable","overridingTitle":"helper code I shared in my snapshot tests on Xcode Cloud post"},{"type":"text","text":" "},{"type":"text","text":"but adds “throwaway” and accessiblity snapshots and provides values for"},{"text":" ","type":"text"},{"text":"precision and perceptual precision that work consistently for me. This helper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"has strong opinions and does not provide the user with a lot of flexibility —"},{"text":" ","type":"text"},{"text":"and where there is flexibility the API provides a default value so that most of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the time users would not have to think about those options. Hopefully making"},{"type":"text","text":" "},{"type":"text","text":"these decisions for the user provides a simpler user experience that “just"},{"text":" ","type":"text"},{"text":"works”.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Here is a "},{"isActive":true,"type":"reference","identifier":"https:\/\/gist.github.com\/DavidBrunow\/abb67bb0dda59d9524ae9868c926e810"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that some of the decisions I’ve made may not work for you. For example,"},{"type":"text","text":" "},{"type":"text","text":"I’ve added a check to make sure that the first preferred language on the"},{"type":"text","text":" "},{"text":"simulator running the tests is English (US). This is because I am an American","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the primary language I use is American English and this ensures that I don’t"},{"text":" ","type":"text"},{"text":"accidentally get to a place where all my tests are failing with an extra “u” in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the word “color” if I’ve set my simulator’s primary language to English (UK)."},{"text":" ","type":"text"},{"type":"text","text":"The tests will still fail with this check but they will fail with a useful error"},{"type":"text","text":" "},{"type":"text","text":"message. You may want to change that check to test for your preferred language."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This helper uses another "},{"type":"reference","identifier":"https:\/\/gist.github.com\/DavidBrunow\/c7fa841ecd61526a660367c32a093a0c","isActive":true},{"text":" which I pulled from","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/stackoverflow.com\/a\/26962452"},{"type":"text","text":" to be able to check"},{"text":" ","type":"text"},{"text":"whether the right simulator is being used for the snapshots.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These two helpers and the shim I created for accessibility snapshot testing all"},{"text":" ","type":"text"},{"text":"need to be copied into your hosted tests target.","type":"text"}]},{"inlineContent":[{"text":"Using these helpers, this is what the callsite for running the standard tests","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"would look like:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["...","  assertStandardSnapshots(","    content: Text(\"I am going to be snapshot!\"),","    named: \"Sample Text\"","  )","..."]}],"kind":"content"}],"topicSectionsStyle":"detailedGrid","kind":"article","sections":[],"variants":[{"paths":["\/documentation\/brunow\/10-21-here-be-dragons-snapshot-testing-edition"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"misrenderedSwiftUIList":{"alt":"Screenshot of a SwiftUI List in my app. Each row in the list has slightly rounded corners that make it look goofy.","variants":[{"traits":["3x","light"],"url":"\/images\/misrenderedSwiftUIList@3x.png"}],"identifier":"misrenderedSwiftUIList","type":"image"},"numberOfPreferredLanguagesXcodeCloudSonoma":{"type":"image","identifier":"numberOfPreferredLanguagesXcodeCloudSonoma","alt":"Screenshot showing that the simulator running on macOS Sonoma has 34 preferred languages.","variants":[{"traits":["2x","light"],"url":"\/images\/numberOfPreferredLanguagesXcodeCloudSonoma@2x.png"}]},"doc://Brunow/documentation/Brunow/08-30-snapshot-testing-with-xcode-cloud":{"kind":"article","role":"article","images":[{"identifier":"snapshotTestFailures.png","type":"card"}],"identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud","abstract":[{"type":"text","text":"Working around unexpectedly sharp edges when using snapshot tests."}],"title":"Snapshot Testing with Xcode Cloud","type":"topic","url":"\/documentation\/brunow\/08-30-snapshot-testing-with-xcode-cloud"},"doc://Brunow/documentation/Brunow/08-30-snapshot-testing-with-xcode-cloud#Create-a-symlink-in-the-ciscripts-directory-to-where-our-snapshots-are-stored":{"kind":"section","title":"Create a symlink in the ci_scripts directory to where our snapshots are stored","abstract":[],"identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud#Create-a-symlink-in-the-ciscripts-directory-to-where-our-snapshots-are-stored","type":"topic","url":"\/documentation\/brunow\/08-30-snapshot-testing-with-xcode-cloud#Create-a-symlink-in-the-ciscripts-directory-to-where-our-snapshots-are-stored"},"miscoloredTabBar":{"type":"image","identifier":"miscoloredTabBar","alt":"Screenshot of my app’s miscolored tab bar. The tab bar icons are white on a light gray background which makes them difficult to see.","variants":[{"traits":["3x","light"],"url":"\/images\/miscoloredTabBar@3x.png"}]},"doc://Brunow/documentation/Brunow/Archive":{"url":"\/documentation\/brunow\/archive","kind":"article","role":"collectionGroup","title":"Archive","type":"topic","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/Archive","abstract":[{"type":"text","text":"All posts"}]},"https://developer.apple.com/documentation/uikit/uiview/1622589-drawhierarchy":{"title":"drawHierarchy(in:afterScreenUpdates:)","titleInlineContent":[{"type":"codeVoice","code":"drawHierarchy(in:afterScreenUpdates:)"}],"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622589-drawhierarchy","type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622589-drawhierarchy"},"diffBetweenDrawHierarchyKeyWindowUIWindow":{"type":"image","identifier":"diffBetweenDrawHierarchyKeyWindowUIWindow","alt":"Shows difference between the snapshot taken with the key window and the snapshot taken with a UIWindow. The snapshot taken with the UIWindow looks the same other than the tab bar is lower on the screen.","variants":[{"traits":["3x","light"],"url":"\/images\/diffBetweenDrawHierarchyKeyWindowUIWindow@3x.png"}]},"https://developer.apple.com/documentation/quartzcore/calayer/1410909-render":{"title":"render(in:)","titleInlineContent":[{"type":"codeVoice","code":"render(in:)"}],"identifier":"https:\/\/developer.apple.com\/documentation\/quartzcore\/calayer\/1410909-render","type":"link","url":"https:\/\/developer.apple.com\/documentation\/quartzcore\/calayer\/1410909-render"},"https://github.com/feedback-assistant/reports/issues/431":{"type":"link","identifier":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/431","url":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/431","title":"FB13288344","titleInlineContent":[{"type":"text","text":"FB13288344"}]},"accessibilitySnapshotTestExample":{"alt":"Accessiblity snapshot showing a snapshot of the user interface on the left. The snapshot of the user interface has colored rectangles over different elements which match up to the VoiceOver text that will be spoken for that element on the right.","variants":[{"traits":["3x","light"],"url":"\/images\/accessibilitySnapshotTestExample@3x.png"}],"identifier":"accessibilitySnapshotTestExample","type":"image"},"doc://Brunow/documentation/Brunow/11-30-follow-up-snapshot-testing-xcode-cloud-sonoma":{"url":"\/documentation\/brunow\/11-30-follow-up-snapshot-testing-xcode-cloud-sonoma","role":"article","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/11-30-follow-up-snapshot-testing-xcode-cloud-sonoma","abstract":[{"type":"text","text":"Working around a change in simulator configuration."}],"title":"Follow up: Snapshot Testing with Xcode Cloud on Sonoma","kind":"article","type":"topic"},"#Using-strong-opinions-in-higher-level-libraries":{"type":"link","identifier":"#Using-strong-opinions-in-higher-level-libraries","url":"#Using-strong-opinions-in-higher-level-libraries","title":"I’ve figured out that  having certain locales setup as preferred languages in a simulator causes different rendering","titleInlineContent":[{"type":"text","text":"I’ve figured out that  having certain locales setup as preferred languages in a simulator causes different rendering"}]},"doc://Brunow/documentation/Brunow/08-30-snapshot-testing-with-xcode-cloud#Creating-Something-Reusable":{"kind":"section","title":"Creating Something Reusable","abstract":[],"identifier":"doc:\/\/Brunow\/documentation\/Brunow\/08-30-snapshot-testing-with-xcode-cloud#Creating-Something-Reusable","type":"topic","url":"\/documentation\/brunow\/08-30-snapshot-testing-with-xcode-cloud#Creating-Something-Reusable"},"https://github.com/pointfreeco/swift-snapshot-testing/issues/667#issuecomment-1462270406":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1462270406","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1462270406","title":"a potential solution","titleInlineContent":[{"type":"text","text":"a potential solution"}]},"doc://Brunow/documentation/Brunow":{"type":"topic","role":"collection","identifier":"doc:\/\/Brunow\/documentation\/Brunow","abstract":[{"type":"text","text":"David Brunow, known as Brunow [ˈbɹunoʊ] to the folks he works with, is a human living on Earth. You might have something in common with him — if you think it is ridiculous that he is talking about himself in the first person here, so does he."}],"title":"Brunow","kind":"symbol","url":"\/documentation\/brunow"},"https://en.wikipedia.org/wiki/Here_be_dragons":{"title":"Here Be Dragons (HC SVNT DRACONES) on Wikipedia","titleInlineContent":[{"type":"text","text":"Here Be Dragons (HC SVNT DRACONES) on Wikipedia"}],"identifier":"https:\/\/en.wikipedia.org\/wiki\/Here_be_dragons","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Here_be_dragons"},"https://github.com/pointfreeco/swift-snapshot-testing/issues/667#issuecomment-1463810906":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1463810906","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667#issuecomment-1463810906","title":"someone commented that it did not work for them","titleInlineContent":[{"type":"text","text":"someone commented that it did not work for them"}]},"https://github.com/pointfreeco/swift-snapshot-testing/pull/796":{"title":"a pull request with suggestions for that","titleInlineContent":[{"type":"text","text":"a pull request with"},{"type":"text","text":" "},{"text":"suggestions for that","type":"text"}],"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/pull\/796","type":"link","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/pull\/796"},"misrenderedSwiftUIList.png":{"type":"image","alt":null,"identifier":"misrenderedSwiftUIList.png","variants":[{"url":"\/images\/misrenderedSwiftUIList@3x.png","traits":["3x","light"]}]},"https://developer.apple.com/documentation/uikit/uiapplication/1622924-keywindow":{"title":"key window","titleInlineContent":[{"text":"key window","type":"text"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiapplication\/1622924-keywindow","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiapplication\/1622924-keywindow"},"doc://Brunow/documentation/Brunow/2023":{"url":"\/documentation\/brunow\/2023","role":"collectionGroup","identifier":"doc:\/\/Brunow\/documentation\/Brunow\/2023","abstract":[],"title":"2023","kind":"article","type":"topic"},"https://github.com/cashapp/AccessibilitySnapshot/issues/168":{"type":"link","identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/issues\/168","url":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/issues\/168","title":"an issue on the Accessibility Snapshot Testing library","titleInlineContent":[{"type":"text","text":"an issue on the Accessibility Snapshot Testing library"}]},"https://github.com/pointfreeco/swift-snapshot-testing/issues/667":{"title":"this GitHub issue","titleInlineContent":[{"text":"this GitHub issue","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/issues\/667"},"arabicOrArmenianTestFailure":{"type":"image","alt":"Screenshot showing a test failure about the simulator having Arabic or Armenian in its preferred languages.","identifier":"arabicOrArmenianTestFailure","variants":[{"url":"\/images\/arabicOrArmenianTestFailure@2x.png","traits":["2x","light"]}]},"https://github.com/pointfreeco/swift-snapshot-testing/blob/main/Sources/SnapshotTesting/Snapshotting/UIViewController.swift#L48":{"title":"the snapshot testing documentation around UIViewController snapshot strategies","titleInlineContent":[{"text":"the snapshot testing documentation around ","type":"text"},{"code":"UIViewController","type":"codeVoice"},{"type":"text","text":" snapshot strategies"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Snapshotting\/UIViewController.swift#L48","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Snapshotting\/UIViewController.swift#L48"},"https://gist.github.com/DavidBrunow/c7fa841ecd61526a660367c32a093a0c":{"type":"link","identifier":"https:\/\/gist.github.com\/DavidBrunow\/c7fa841ecd61526a660367c32a093a0c","url":"https:\/\/gist.github.com\/DavidBrunow\/c7fa841ecd61526a660367c32a093a0c","title":"helper extension on UIDevice","titleInlineContent":[{"type":"text","text":"helper extension on "},{"code":"UIDevice","type":"codeVoice"}]},"https://github.com/pointfreeco/swift-snapshot-testing/discussions/797":{"title":"discussion","titleInlineContent":[{"type":"text","text":"discussion"}],"identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/discussions\/797","type":"link","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/discussions\/797"},"https://softwareengineering.stackexchange.com/a/358792":{"type":"link","identifier":"https:\/\/softwareengineering.stackexchange.com\/a\/358792","url":"https:\/\/softwareengineering.stackexchange.com\/a\/358792","title":"“golden”","titleInlineContent":[{"text":"“golden”","type":"text"}]},"https://github.com/pointfreeco/swift-snapshot-testing/blob/main/Sources/SnapshotTesting/Common/View.swift#L990C46-L990C46":{"url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L990C46-L990C46","title":"this conditional in View.swift","type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L990C46-L990C46","titleInlineContent":[{"type":"text","text":"this conditional in "},{"type":"codeVoice","code":"View.swift"}]},"https://github.com/feedback-assistant/reports/issues/430":{"type":"link","identifier":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/430","url":"https:\/\/github.com\/feedback-assistant\/reports\/issues\/430","title":"FB13292311","titleInlineContent":[{"type":"text","text":"FB13292311"}]},"snapshotTestFailures.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/snapshotTestFailures.png"}],"type":"image","identifier":"snapshotTestFailures.png","alt":"Screenshot of snapshot test failures from Xcode Cloud."},"https://github.com/pointfreeco/swift-snapshot-testing":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing","title":"Point-Free Snapshot Testing library","titleInlineContent":[{"type":"text","text":"Point-Free Snapshot Testing library"}]},"https://stackoverflow.com/a/25704861":{"url":"https:\/\/stackoverflow.com\/a\/25704861","type":"link","title":"this interesting StackOverflow post","identifier":"https:\/\/stackoverflow.com\/a\/25704861","titleInlineContent":[{"type":"text","text":"this interesting StackOverflow post"}]},"https://github.com/cashapp/AccessibilitySnapshot/pull/143":{"type":"link","identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/pull\/143","url":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot\/pull\/143","title":"this pull request","titleInlineContent":[{"type":"text","text":"this pull request"}]},"https://stackoverflow.com/a/26962452":{"url":"https:\/\/stackoverflow.com\/a\/26962452","type":"link","title":"Stack Overflow","identifier":"https:\/\/stackoverflow.com\/a\/26962452","titleInlineContent":[{"type":"text","text":"Stack Overflow"}]},"https://github.com/pointfreeco/swift-snapshot-testing/blob/main/Sources/SnapshotTesting/Common/View.swift#L940C36-L940C36":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L940C36-L940C36","url":"https:\/\/github.com\/pointfreeco\/swift-snapshot-testing\/blob\/main\/Sources\/SnapshotTesting\/Common\/View.swift#L940C36-L940C36","title":"line 940 of View.swift","titleInlineContent":[{"type":"text","text":"line 940 of View.swift"}]},"https://gist.github.com/DavidBrunow/abb67bb0dda59d9524ae9868c926e810":{"title":"gist with my helper code","titleInlineContent":[{"type":"text","text":"gist with my helper code"}],"identifier":"https:\/\/gist.github.com\/DavidBrunow\/abb67bb0dda59d9524ae9868c926e810","type":"link","url":"https:\/\/gist.github.com\/DavidBrunow\/abb67bb0dda59d9524ae9868c926e810"},"https://gist.github.com/DavidBrunow/9aade5980649c660d73795d7c9b5b056":{"type":"link","identifier":"https:\/\/gist.github.com\/DavidBrunow\/9aade5980649c660d73795d7c9b5b056","url":"https:\/\/gist.github.com\/DavidBrunow\/9aade5980649c660d73795d7c9b5b056","title":"created a shim","titleInlineContent":[{"type":"text","text":"created a shim"}]},"https://developer.apple.com/fonts/":{"title":"Apple website about their fonts","titleInlineContent":[{"type":"text","text":"Apple website about their fonts"}],"identifier":"https:\/\/developer.apple.com\/fonts\/","type":"link","url":"https:\/\/developer.apple.com\/fonts\/"},"https://github.com/apple/swift-docc/issues/737":{"type":"link","identifier":"https:\/\/github.com\/apple\/swift-docc\/issues\/737","url":"https:\/\/github.com\/apple\/swift-docc\/issues\/737","title":"issue on the Swift-DocC project","titleInlineContent":[{"type":"text","text":"issue on the Swift-DocC project"}]},"https://forums.swift.org/t/host-application-for-spm-tests/24363":{"title":"this thread on the Swift forums","titleInlineContent":[{"text":"this thread on the Swift forums","type":"text"}],"identifier":"https:\/\/forums.swift.org\/t\/host-application-for-spm-tests\/24363","type":"link","url":"https:\/\/forums.swift.org\/t\/host-application-for-spm-tests\/24363"},"https://github.com/cashapp/AccessibilitySnapshot":{"type":"link","identifier":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot","url":"https:\/\/github.com\/cashapp\/AccessibilitySnapshot","title":"library","titleInlineContent":[{"type":"text","text":"library"}]}}}